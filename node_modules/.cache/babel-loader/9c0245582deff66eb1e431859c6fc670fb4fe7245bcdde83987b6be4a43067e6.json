{"ast":null,"code":"var _jsxFileName = \"/Users/ayushtripathi/Desktop/Weather_Application/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport TopButtons from \"./components/TopButtons\";\nimport Inputs from \"./components/Inputs\";\nimport TimeAndLocation from \"./components/TimeAndLocation\";\nimport TemperatureAndDetails from \"./components/TemperatureAndDetails\";\nimport Forecast from \"./components/Forecast\";\nimport getFormattedWeatherData from \"./services/weatherService\";\nimport { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState({\n    q: \"Los Angeles\"\n  });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n\n  // useEffect(() => {\n  //   const fetchWeather = async () => {\n  //     const message = query.q ? query.q : \"current location.\";\n\n  //     //toast.info(\"Fetching weather for \" + message);\n\n  //     await getFormattedWeatherData({ ...query, units }).then((data) => {\n  //       toast.success(\n  //         `Successfully fetched weather for ${data.name}, ${data.country}.`\n  //       );\n  //       setWeather(data);\n  //     });\n  //   };\n\n  //   fetchWeather();\n  // }, [query, units]);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const data = await getFormattedWeatherData({\n          ...query,\n          units\n        });\n        if (data) {\n          toast.success(`Successfully fetched weather for ${data.name}, ${data.country}.`);\n          setWeather(data);\n          console.log(\"Whole\", data);\n        } else {\n          toast.error(\"No weather data found for the given location.\");\n        }\n      } catch (error) {\n        toast.error(\"Error fetching weather data. Please try again later.\");\n        console.error(error);\n      }\n    };\n    fetchWeather();\n  }, [query, units]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mx-auto max-w-screen-md mt-4 rounded-lg  py-5 px-32 bg-gradient-to-br h-fit opacity-80 shadow-xl shadow-gray-400 from-black to-blur }`,\n    children: [/*#__PURE__*/_jsxDEV(TopButtons, {\n      setQuery: setQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n      setQuery: setQuery,\n      units: units,\n      setUnits: setUnits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TimeAndLocation, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureAndDetails, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"hourly forecast\",\n        items: weather.hourly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"daily forecast\",\n        items: weather.daily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      autoClose: 5000,\n      theme: \"colored\",\n      newestOnTop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s88njBuyjW5wvqiZdVIRpMK/LFc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TopButtons","Inputs","TimeAndLocation","TemperatureAndDetails","Forecast","getFormattedWeatherData","useEffect","useState","ToastContainer","toast","jsxDEV","_jsxDEV","App","_s","query","setQuery","q","units","setUnits","weather","setWeather","fetchWeather","data","success","name","country","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","items","hourly","daily","autoClose","theme","newestOnTop","_c","$RefreshReg$"],"sources":["/Users/ayushtripathi/Desktop/Weather_Application/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport TopButtons from \"./components/TopButtons\";\nimport Inputs from \"./components/Inputs\";\nimport TimeAndLocation from \"./components/TimeAndLocation\";\nimport TemperatureAndDetails from \"./components/TemperatureAndDetails\";\nimport Forecast from \"./components/Forecast\";\nimport getFormattedWeatherData from \"./services/weatherService\";\nimport { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  const [query, setQuery] = useState({ q: \"Los Angeles\" });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n\n  // useEffect(() => {\n  //   const fetchWeather = async () => {\n  //     const message = query.q ? query.q : \"current location.\";\n\n  //     //toast.info(\"Fetching weather for \" + message);\n\n  //     await getFormattedWeatherData({ ...query, units }).then((data) => {\n  //       toast.success(\n  //         `Successfully fetched weather for ${data.name}, ${data.country}.`\n  //       );\n  //       setWeather(data);\n  //     });\n  //   };\n\n  //   fetchWeather();\n  // }, [query, units]);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const data = await getFormattedWeatherData({ ...query, units });\n        if (data) {\n          toast.success(\n            `Successfully fetched weather for ${data.name}, ${data.country}.`\n          );\n          setWeather(data);\n          \n          console.log(\"Whole\",data);\n        } else {\n          toast.error(\"No weather data found for the given location.\");\n        }\n      } catch (error) {\n        toast.error(\"Error fetching weather data. Please try again later.\");\n        console.error(error);\n      }\n    };\n\n    fetchWeather();\n  }, [query, units]);\n\n  return (\n    <div\n      className={`mx-auto max-w-screen-md mt-4 rounded-lg  py-5 px-32 bg-gradient-to-br h-fit opacity-80 shadow-xl shadow-gray-400 from-black to-blur }`}\n    >\n      <TopButtons setQuery={setQuery} />\n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n\n      {weather && (\n        <div>\n          <TimeAndLocation weather={weather} />\n          \n          <TemperatureAndDetails weather={weather} />\n\n          <Forecast title=\"hourly forecast\" items={weather.hourly} />\n          <Forecast title=\"daily forecast\" items={weather.daily} />\n        </div>\n      )}\n\n      <ToastContainer autoClose={5000} theme=\"colored\" newestOnTop={true} />\n    </div>\n    \n\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}