{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ayushtripathi/Desktop/Weather_Application/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/ayushtripathi/Desktop/Weather_Application/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/Users/ayushtripathi/Desktop/Weather_Application/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{DateTime}from\"luxon\";var API_KEY=process.env.REACT_APP_API_URL;// API KEY Store in .env file\nvar BASE_URL=\"https://api.openweathermap.org/data/2.5\";var getWeatherData=function getWeatherData(infoType,searchParams){var url=new URL(BASE_URL+\"/\"+infoType);url.search=new URLSearchParams(_objectSpread(_objectSpread({},searchParams),{},{appid:API_KEY}));return fetch(url).then(function(res){return res.json();});};var formatCurrentWeather=function formatCurrentWeather(data){var _data$coord=data.coord,lat=_data$coord.lat,lon=_data$coord.lon,_data$main=data.main,temp=_data$main.temp,feels_like=_data$main.feels_like,temp_min=_data$main.temp_min,temp_max=_data$main.temp_max,humidity=_data$main.humidity,name=data.name,dt=data.dt,_data$sys=data.sys,country=_data$sys.country,sunrise=_data$sys.sunrise,sunset=_data$sys.sunset,weather=data.weather,speed=data.wind.speed;var _weather$=weather[0],details=_weather$.main,icon=_weather$.icon;return{lat:lat,lon:lon,temp:temp,feels_like:feels_like,temp_min:temp_min,temp_max:temp_max,humidity:humidity,name:name,dt:dt,country:country,sunrise:sunrise,sunset:sunset,details:details,icon:icon,speed:speed};};var formatForecastWeather=function formatForecastWeather(data){var list=data.list;var timezone=data.timezone;var daily=list.filter(function(obj,index,self){var currentDate=new Date(obj.dt_txt.replace(/-/g,\"/\"));// Replace '-' with '/' for Safari compatibility\nreturn self.findIndex(function(o){return new Date(o.dt_txt.replace(/-/g,\"/\")).toDateString()===currentDate.toDateString();})===index;}).slice(1,6).map(function(d){return{title:formatToLocalTime(d.dt,timezone,\"ccc\"),temp:d.main.temp,icon:d.weather[0].icon};});var hourly=list.slice(1,6).map(function(d){return{title:formatToLocalTime(d.dt,timezone,\"hh:mm a\"),temp:d.main.temp,icon:d.weather[0].icon};});return{timezone:timezone,daily:daily,hourly:hourly};};var getFormattedWeatherData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(searchParams){var formattedCurrentWeather,lat,lon,formattedForecastWeather;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return getWeatherData(\"weather\",searchParams).then(formatCurrentWeather);case 2:formattedCurrentWeather=_context.sent;lat=formattedCurrentWeather.lat,lon=formattedCurrentWeather.lon;_context.next=6;return getWeatherData(\"forecast\",searchParams).then(formatForecastWeather);case 6:formattedForecastWeather=_context.sent;return _context.abrupt(\"return\",_objectSpread(_objectSpread({},formattedCurrentWeather),formattedForecastWeather));case 8:case\"end\":return _context.stop();}},_callee);}));return function getFormattedWeatherData(_x){return _ref.apply(this,arguments);};}();var formatToLocalTime=function formatToLocalTime(secs,zone){var format=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"cccc, dd LLL yyyy' | Local time: 'hh:mm a\";try{var localDateTime=DateTime.fromSeconds(secs).setZone(zone);return localDateTime.toFormat(format);}catch(error){console.error(error);return\"Invalid time zone name\";}};//DateTime.fromSeconds(secs).setZone(zone).toFormat(format);\nvar iconUrlFromCode=function iconUrlFromCode(code){return\"http://openweathermap.org/img/wn/\".concat(code,\"@2x.png\");};export default getFormattedWeatherData;export{formatToLocalTime,iconUrlFromCode};","map":{"version":3,"names":["DateTime","API_KEY","process","env","REACT_APP_API_URL","BASE_URL","getWeatherData","infoType","searchParams","url","URL","search","URLSearchParams","_objectSpread","appid","fetch","then","res","json","formatCurrentWeather","data","_data$coord","coord","lat","lon","_data$main","main","temp","feels_like","temp_min","temp_max","humidity","name","dt","_data$sys","sys","country","sunrise","sunset","weather","speed","wind","_weather$","details","icon","formatForecastWeather","list","timezone","daily","filter","obj","index","self","currentDate","Date","dt_txt","replace","findIndex","o","toDateString","slice","map","d","title","formatToLocalTime","hourly","getFormattedWeatherData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formattedCurrentWeather","formattedForecastWeather","wrap","_callee$","_context","prev","next","sent","abrupt","stop","_x","apply","arguments","secs","zone","format","length","undefined","localDateTime","fromSeconds","setZone","toFormat","error","console","iconUrlFromCode","code","concat"],"sources":["/Users/ayushtripathi/Desktop/Weather_Application/src/services/weatherService.js"],"sourcesContent":["import { DateTime } from \"luxon\";\nconst API_KEY = process.env.REACT_APP_API_URL;  // API KEY Store in .env file\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5\";\n\nconst getWeatherData = (infoType, searchParams) => {\n  const url = new URL(BASE_URL + \"/\" + infoType);\n  url.search = new URLSearchParams({ ...searchParams, appid: API_KEY });\n\n  return fetch(url).then((res) => res.json());\n};\n\nconst formatCurrentWeather = (data) => {\n  const {\n    coord: { lat, lon },\n    main: { temp, feels_like, temp_min, temp_max, humidity },\n    name,\n    dt,\n    sys: { country, sunrise, sunset },\n    weather,\n    wind: { speed },\n  } = data;\n\n  const { main: details, icon } = weather[0];\n\n  return {\n    lat,\n    lon,\n    temp,\n    feels_like,\n    temp_min,\n    temp_max,\n    humidity,\n    name,\n    dt,\n    country,\n    sunrise,\n    sunset,\n    details,\n    icon,\n    speed,\n  };\n};\n\n\n\nconst formatForecastWeather = (data) => {\n    let { list } = data;\n    let {timezone} = data;\n   \n    let daily = list\n    .filter((obj, index, self) => {\n      const currentDate = new Date(obj.dt_txt.replace(/-/g, \"/\")); // Replace '-' with '/' for Safari compatibility\n      return self.findIndex(o => new Date(o.dt_txt.replace(/-/g, \"/\")).toDateString() === currentDate.toDateString()) === index;\n    })\n    \n    .slice(1, 6).map((d) => {\n        return {\n        title: formatToLocalTime(d.dt, timezone, \"ccc\"),\n        temp: d.main.temp,\n        icon: d.weather[0].icon,\n        };\n    });\n\n    let hourly = list.slice(1, 6).map((d) => {\n        return {\n        title: formatToLocalTime(d.dt, timezone, \"hh:mm a\"),\n        temp: d.main.temp,\n        icon: d.weather[0].icon,\n        };\n    });\n  \n\n  return { timezone, daily, hourly};\n};\n\nconst getFormattedWeatherData = async (searchParams) => {\n  const formattedCurrentWeather = await getWeatherData(\n    \"weather\",\n    searchParams\n  ).then(formatCurrentWeather);\n\n  const { lat, lon } = formattedCurrentWeather;\n\n  const formattedForecastWeather = await getWeatherData(\n    \"forecast\",\n    searchParams\n  ).then(formatForecastWeather);\n\n  return { ...formattedCurrentWeather, ...formattedForecastWeather };\n};\n\nconst formatToLocalTime = (\n  secs,\n  zone,\n  format = \"cccc, dd LLL yyyy' | Local time: 'hh:mm a\"\n) => {try {\n  const localDateTime = DateTime.fromSeconds(secs).setZone(zone);\n  return localDateTime.toFormat(format);\n} catch (error) {\n  console.error(error);\n  return \"Invalid time zone name\";\n}\n\n};//DateTime.fromSeconds(secs).setZone(zone).toFormat(format);\n\nconst iconUrlFromCode = (code) =>\n  `http://openweathermap.org/img/wn/${code}@2x.png`;\n\nexport default getFormattedWeatherData;\n\nexport { formatToLocalTime, iconUrlFromCode };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}