{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ayushtripathi/Desktop/Weather_Application/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectSpread from\"/Users/ayushtripathi/Desktop/Weather_Application/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/ayushtripathi/Desktop/Weather_Application/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/ayushtripathi/Desktop/Weather_Application/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"./App.css\";import TopButtons from\"./components/TopButtons\";import Inputs from\"./components/Inputs\";import TimeAndLocation from\"./components/TimeAndLocation\";import TemperatureAndDetails from\"./components/TemperatureAndDetails\";import Forecast from\"./components/Forecast\";import getFormattedWeatherData from\"./services/weatherService\";import{useEffect,useState}from\"react\";import{ToastContainer,toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState({q:\"Los Angeles\"}),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState(\"metric\"),_useState4=_slicedToArray(_useState3,2),units=_useState4[0],setUnits=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),weather=_useState6[0],setWeather=_useState6[1];// useEffect(() => {\n//   const fetchWeather = async () => {\n//     const message = query.q ? query.q : \"current location.\";\n//     //toast.info(\"Fetching weather for \" + message);\n//     await getFormattedWeatherData({ ...query, units }).then((data) => {\n//       toast.success(\n//         `Successfully fetched weather for ${data.name}, ${data.country}.`\n//       );\n//       setWeather(data);\n//     });\n//   };\n//   fetchWeather();\n// }, [query, units]);\nuseEffect(function(){var fetchWeather=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getFormattedWeatherData(_objectSpread(_objectSpread({},query),{},{units:units}));case 3:data=_context.sent;if(data){toast.success(\"Successfully fetched weather for \".concat(data.name,\", \").concat(data.country,\".\"));setWeather(data);}else{toast.error(\"No weather data found for the given location.\");}_context.next=11;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);toast.error(\"Error fetching weather data. Please try again later.\");console.error(_context.t0);case 11:case\"end\":return _context.stop();}},_callee,null,[[0,7]]);}));return function fetchWeather(){return _ref.apply(this,arguments);};}();fetchWeather();},[query,units]);return/*#__PURE__*/_jsxs(\"div\",{className:\"mx-auto max-w-screen-md mt-4 rounded-lg  py-5 px-32 bg-gradient-to-br h-fit opacity-80 shadow-xl shadow-gray-400 from-black to-blur }\",children:[/*#__PURE__*/_jsx(TopButtons,{setQuery:setQuery}),/*#__PURE__*/_jsx(Inputs,{setQuery:setQuery,units:units,setUnits:setUnits}),weather&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(TimeAndLocation,{weather:weather}),/*#__PURE__*/_jsx(TemperatureAndDetails,{weather:weather}),/*#__PURE__*/_jsx(Forecast,{title:\"hourly forecast\",items:weather.hourly}),/*#__PURE__*/_jsx(Forecast,{title:\"daily forecast\",items:weather.daily})]}),/*#__PURE__*/_jsx(ToastContainer,{autoClose:5000,theme:\"colored\",newestOnTop:true})]});}export default App;","map":{"version":3,"names":["TopButtons","Inputs","TimeAndLocation","TemperatureAndDetails","Forecast","getFormattedWeatherData","useEffect","useState","ToastContainer","toast","jsx","_jsx","jsxs","_jsxs","App","_useState","q","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","units","setUnits","_useState5","_useState6","weather","setWeather","fetchWeather","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_callee$","_context","prev","next","_objectSpread","sent","success","concat","name","country","error","t0","console","stop","apply","arguments","className","children","title","items","hourly","daily","autoClose","theme","newestOnTop"],"sources":["/Users/ayushtripathi/Desktop/Weather_Application/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport TopButtons from \"./components/TopButtons\";\nimport Inputs from \"./components/Inputs\";\nimport TimeAndLocation from \"./components/TimeAndLocation\";\nimport TemperatureAndDetails from \"./components/TemperatureAndDetails\";\nimport Forecast from \"./components/Forecast\";\nimport getFormattedWeatherData from \"./services/weatherService\";\nimport { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  const [query, setQuery] = useState({ q: \"Los Angeles\" });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n\n  // useEffect(() => {\n  //   const fetchWeather = async () => {\n  //     const message = query.q ? query.q : \"current location.\";\n\n  //     //toast.info(\"Fetching weather for \" + message);\n\n  //     await getFormattedWeatherData({ ...query, units }).then((data) => {\n  //       toast.success(\n  //         `Successfully fetched weather for ${data.name}, ${data.country}.`\n  //       );\n  //       setWeather(data);\n  //     });\n  //   };\n\n  //   fetchWeather();\n  // }, [query, units]);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const data = await getFormattedWeatherData({ ...query, units });\n        if (data) {\n          toast.success(\n            `Successfully fetched weather for ${data.name}, ${data.country}.`\n          );\n          setWeather(data);\n        } else {\n          toast.error(\"No weather data found for the given location.\");\n        }\n      } catch (error) {\n        toast.error(\"Error fetching weather data. Please try again later.\");\n        console.error(error);\n      }\n    };\n\n    fetchWeather();\n  }, [query, units]);\n\n  return (\n    <div\n      className={`mx-auto max-w-screen-md mt-4 rounded-lg  py-5 px-32 bg-gradient-to-br h-fit opacity-80 shadow-xl shadow-gray-400 from-black to-blur }`}\n    >\n      <TopButtons setQuery={setQuery} />\n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n\n      {weather && (\n        <div>\n          <TimeAndLocation weather={weather} />\n          <TemperatureAndDetails weather={weather} />\n\n          <Forecast title=\"hourly forecast\" items={weather.hourly} />\n          <Forecast title=\"daily forecast\" items={weather.daily} />\n        </div>\n      )}\n\n      <ToastContainer autoClose={5000} theme=\"colored\" newestOnTop={true} />\n    </div>\n    \n\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}