[{"/Users/ayushtripathi/Desktop/Weather_Application/src/index.js":"1","/Users/ayushtripathi/Desktop/Weather_Application/src/App.js":"2","/Users/ayushtripathi/Desktop/Weather_Application/src/reportWebVitals.js":"3","/Users/ayushtripathi/Desktop/Weather_Application/src/services/weatherService.js":"4","/Users/ayushtripathi/Desktop/Weather_Application/src/components/Forecast.jsx":"5","/Users/ayushtripathi/Desktop/Weather_Application/src/components/Inputs.jsx":"6","/Users/ayushtripathi/Desktop/Weather_Application/src/components/TemperatureAndDetails.jsx":"7","/Users/ayushtripathi/Desktop/Weather_Application/src/components/TimeAndLocation.jsx":"8","/Users/ayushtripathi/Desktop/Weather_Application/src/components/TopButtons.jsx":"9"},{"size":499,"mtime":1683165033132,"results":"10","hashOfConfig":"11"},{"size":2479,"mtime":1683228714161,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1683149151050,"results":"13","hashOfConfig":"11"},{"size":2696,"mtime":1683186524774,"results":"14","hashOfConfig":"11"},{"size":990,"mtime":1683163440933,"results":"15","hashOfConfig":"11"},{"size":2749,"mtime":1683228327251,"results":"16","hashOfConfig":"11"},{"size":2753,"mtime":1683162743844,"results":"17","hashOfConfig":"11"},{"size":650,"mtime":1683186663206,"results":"18","hashOfConfig":"11"},{"size":744,"mtime":1683185245268,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nevmwb",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ayushtripathi/Desktop/Weather_Application/src/index.js",[],[],"/Users/ayushtripathi/Desktop/Weather_Application/src/App.js",[],[],"/Users/ayushtripathi/Desktop/Weather_Application/src/reportWebVitals.js",[],[],"/Users/ayushtripathi/Desktop/Weather_Application/src/services/weatherService.js",["48","49"],[],"import { DateTime } from \"luxon\";\nconst API_KEY = process.env.REACT_APP_API_URL;  // API KEY Store in .env file\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5\";\n\nconst getWeatherData = (infoType, searchParams) => {\n  const url = new URL(BASE_URL + \"/\" + infoType);\n  url.search = new URLSearchParams({ ...searchParams, appid: API_KEY });\n\n  return fetch(url).then((res) => res.json());\n};\n\nconst formatCurrentWeather = (data) => {\n  const {\n    coord: { lat, lon },\n    main: { temp, feels_like, temp_min, temp_max, humidity },\n    name,\n    dt,\n    sys: { country, sunrise, sunset },\n    weather,\n    wind: { speed },\n  } = data;\n\n  const { main: details, icon } = weather[0];\n\n  return {\n    lat,\n    lon,\n    temp,\n    feels_like,\n    temp_min,\n    temp_max,\n    humidity,\n    name,\n    dt,\n    country,\n    sunrise,\n    sunset,\n    details,\n    icon,\n    speed,\n  };\n};\n\n\n\nconst formatForecastWeather = (data) => {\n    let { list } = data;\n    let {timezone} = data;\n   \n    let daily = list\n    .filter((obj, index, self) => {\n      const currentDate = new Date(obj.dt_txt.replace(/-/g, \"/\")); // Replace '-' with '/' for Safari compatibility\n      return self.findIndex(o => new Date(o.dt_txt.replace(/-/g, \"/\")).toDateString() === currentDate.toDateString()) === index;\n    })\n    \n    .slice(1, 6).map((d) => {\n        return {\n        title: formatToLocalTime(d.dt, timezone, \"ccc\"),\n        temp: d.main.temp,\n        icon: d.weather[0].icon,\n        };\n    });\n\n    let hourly = list.slice(1, 6).map((d) => {\n        return {\n        title: formatToLocalTime(d.dt, timezone, \"hh:mm a\"),\n        temp: d.main.temp,\n        icon: d.weather[0].icon,\n        };\n    });\n  \n\n  return { timezone, daily, hourly};\n};\n\nconst getFormattedWeatherData = async (searchParams) => {\n  const formattedCurrentWeather = await getWeatherData(\n    \"weather\",\n    searchParams\n  ).then(formatCurrentWeather);\n\n  const { lat, lon } = formattedCurrentWeather;\n\n  const formattedForecastWeather = await getWeatherData(\n    \"forecast\",\n    searchParams\n  ).then(formatForecastWeather);\n\n  return { ...formattedCurrentWeather, ...formattedForecastWeather };\n};\n\nconst formatToLocalTime = (\n  secs,\n  zone,\n  format = \"cccc, dd LLL yyyy' | Local time: 'hh:mm a\"\n) => {try {\n  const localDateTime = DateTime.fromSeconds(secs).setZone(zone);\n  return localDateTime.toFormat(format);\n} catch (error) {\n  console.error(error);\n  return \"Invalid time zone name\";\n}\n\n};//DateTime.fromSeconds(secs).setZone(zone).toFormat(format);\n\nconst iconUrlFromCode = (code) =>\n  `http://openweathermap.org/img/wn/${code}@2x.png`;\n\nexport default getFormattedWeatherData;\n\nexport { formatToLocalTime, iconUrlFromCode };","/Users/ayushtripathi/Desktop/Weather_Application/src/components/Forecast.jsx",[],[],"/Users/ayushtripathi/Desktop/Weather_Application/src/components/Inputs.jsx",[],[],"/Users/ayushtripathi/Desktop/Weather_Application/src/components/TemperatureAndDetails.jsx",[],[],"/Users/ayushtripathi/Desktop/Weather_Application/src/components/TimeAndLocation.jsx",[],[],"/Users/ayushtripathi/Desktop/Weather_Application/src/components/TopButtons.jsx",[],[],{"ruleId":"50","severity":1,"message":"51","line":82,"column":11,"nodeType":"52","messageId":"53","endLine":82,"endColumn":14},{"ruleId":"50","severity":1,"message":"54","line":82,"column":16,"nodeType":"52","messageId":"53","endLine":82,"endColumn":19},"no-unused-vars","'lat' is assigned a value but never used.","Identifier","unusedVar","'lon' is assigned a value but never used."]